@page "/"
@inject FBikeMonitor BikeMonitor
@inject IJSRuntime JsRuntime

@code {
    FBikeMonitor.OneRotationDetectedEventHandler _handler;

    protected override void OnInitialized()
    {
        _handler = (sender, volume) => { UpdateVolume(sender, volume); };
        BikeMonitor.OneRotationDetected += _handler;
    }

    public async Task UpdateVolume(object sender, float volume)
    {
        await InvokeAsync(StateHasChanged);
        var longLat = await JsRuntime.InvokeAsync<float[]>("getCurrentLongLat");
        var longitude = longLat[0];
        var latitude = longLat[1];
        latitude += 0.000005f;

        await JsRuntime.InvokeVoidAsync("updateLongLat", longitude, latitude);
    }

    public void Dispose()
    {
        BikeMonitor.OneRotationDetected -= _handler;
    }
}

<h1>FBike Monitor</h1>
<div>
    Current volume: @BikeMonitor.CurrentVolume
</div>


